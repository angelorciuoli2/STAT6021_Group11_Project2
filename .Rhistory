peng <- penguins
peng.clean <- na.omit(peng)
ggplot(peng, aes(x=flipper_length_mm, y=body_mass_g))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)
theme(plot.title = element_text(hjust=.5))+
labs(x="Flipper Length (in mm)", y="Body Mass (in g)", title= "Body Mass Against Flipper Length")
ggplot(peng, aes(x=flipper_length_mm, y=body_mass_g, color=species))+
geom_point()+
theme(plot.title = element_text(hjust=.5))+
labs(x="Flipper Length (in mm)", y="Body Mass (in g)", title= "Body Mass Against Flipper Length")
gentoo <- peng %>%
filter(species == "Gentoo")
ggplot(gentoo, aes(x=flipper_length_mm, y=body_mass_g))+
geom_point()+
geom_smooth(metho = "lm", se=FALSE)+
theme(plot.title = element_text(hjust=.5))+
labs(x="Flipper Length (in mm)", y="Body Mass (in g)", title= "Body Mass Against Flipper Length")
regression <- lm(body_mass_g~flipper_length_mm, data=peng)
summary(regression)
prediction1 <- data.frame(flipper_length_mm = 220)
predict(regression, prediction1)
anova.tab <- anova(regression)
anova.tab
#calculate SST
SST <- sum(anova.tab$"Sum Sq")
#Calculate R^2
anova.tab$"Sum Sq"[1]/SST
View(peng.clean)
peng.clean <- peng %>%
filter(!is.na(flipper_length_mm))
library(tidyverse)
library(palmerpenguins)
peng <- penguins
peng.clean <- peng %>%
filter(!is.na(flipper_length_mm))
peng.clean <- peng.clean %>%
filter(!is.na(body_mass_g))
View(peng.clean)
peng.clean <- peng %>%
filter(!is.na(flipper_length_mm))
ggplot(peng.clean, aes(x=flipper_length_mm, y=body_mass_g))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)
theme(plot.title = element_text(hjust=.5))+
labs(x="Flipper Length (in mm)", y="Body Mass (in g)", title= "Body Mass Against Flipper Length")
ggplot(peng.clean, aes(x=flipper_length_mm, y=body_mass_g, color=species))+
geom_point()+
theme(plot.title = element_text(hjust=.5))+
labs(x="Flipper Length (in mm)", y="Body Mass (in g)", title= "Body Mass Against Flipper Length")
gentoo <- peng.clean %>%
filter(species == "Gentoo")
ggplot(gentoo, aes(x=flipper_length_mm, y=body_mass_g))+
geom_point()+
geom_smooth(metho = "lm", se=FALSE)+
theme(plot.title = element_text(hjust=.5))+
labs(x="Flipper Length (in mm)", y="Body Mass (in g)", title= "Body Mass Against Flipper Length")
ggplot(gentoo, aes(x=flipper_length_mm, y=body_mass_g))+
geom_point()+
geom_smooth(method = "lm", se=FALSE)+
theme(plot.title = element_text(hjust=.5))+
labs(x="Flipper Length (in mm)", y="Body Mass (in g)", title= "Body Mass Against Flipper Length")
regression <- lm(body_mass_g~flipper_length_mm, data=peng.clean)
summary(regression)
prediction1 <- data.frame(flipper_length_mm = 220)
predict(regression, prediction1)
anova.tab <- anova(regression)
anova.tab
SST <- sum(anova.tab$"Sum Sq")
anova.tab$"Sum Sq"[1]/SST
qt(.95, 1, 340)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(scales)
DATA <- read.csv("diamonds.csv", header=TRUE)
head(DATA)
#factor cut so any visualization showing cut on the x-axis as them ordered from best to worst
DATA$cut <- factor(DATA$cut, c("Astor Ideal", "Ideal", "Very Good", "Good"))
ggplot(DATA, aes(x = carat, y = price)) +
geom_point() +
geom_smooth(method = "lm") +
theme(plot.title = element_text(hjust=.5))+
labs(title = "Scatterplot of Price vs. Carat",
x = "Carat",
y = "Price")+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
#Multivariate scatterplot
ggplot(DATA, aes(x=carat, y=price, color=clarity))+
geom_point()+
scale_size(range = c(0.1,12))+
theme(plot.title = element_text(hjust = 0.5))+
labs(x= "Carat", y= "Price", title= "Scatter Plot of Carat vs Price by Clarity")+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
NoFL <- DATA %>%
filter(clarity!='FL') %>%
ggplot(aes(x = clarity, y = price)) +
geom_boxplot(outlier.shape = NA, fill = "lightblue") +
theme(plot.title=element_text(hjust=.5))+
labs(title = "Price  by Clarity Without Flawless",
x = "Clarity",
y = "Price")+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())+
coord_cartesian(ylim = c(0,15000 ))
NoFL
ggplot(DATA, aes(x = clarity, y = price)) +
geom_boxplot(fill = "lightblue") +
theme(plot.title=element_text(hjust=.5))+
labs(title = "Price by Clarity Including Flawless",
x = "Clarity",
y = "Price")+
scale_y_continuous(breaks = breaks_extended(12), labels = label_dollar())+
coord_cartesian(ylim = c(0,250000 ))
ggplot(DATA, aes(x = color, y = price)) +
geom_boxplot(outlier.shape = NA, fill = "lightgreen") +
theme(plot.title=element_text(hjust=.5))+
labs(title = "Price by Color",
x = "Color",
y = "Price")+
scale_y_continuous(breaks = breaks_extended(12), labels = label_dollar())+
coord_cartesian(ylim = c(0,15000 ))
ggplot(DATA, aes(x = color, y = price)) +
geom_boxplot(fill = "lightgreen") +
theme(plot.title=element_text(hjust=.5))+
labs(title = "Price by Color",
x = "Color",
y = "Price")+
scale_y_continuous(breaks = breaks_extended(12),labels = label_dollar())
ggplot(DATA, aes(x = cut, y = price)) +
geom_boxplot(outlier.shape = NA, fill = "lightcoral") +
theme(plot.title=element_text(hjust=.5))+
labs(title = "Price by Cut",
x = "Cut",
y = "Price")+
scale_y_continuous(breaks = breaks_extended(8),labels = label_dollar())+
coord_cartesian(ylim = c(0,15000 ))
ggplot(DATA, aes(x = cut, y = price)) +
geom_boxplot(fill = "lightcoral") +
theme(plot.title=element_text(hjust=.5))+
labs(title = "Price by Cut",
x = "Cut",
y = "Price")+
scale_y_continuous(breaks = breaks_extended(8),labels = label_dollar())
# Boxplot of cut vs carat by clarity
ggplot(DATA, aes(x=cut, y=carat))+
geom_boxplot(fill="Blue")+
facet_wrap(~clarity)+
theme(plot.title = element_text(hjust = 0.5))+
labs(x= "Cut", y= "Carat", title= "Boxplot of Cut vs Carat by Clarity")
# Bivariate Bar Chart
ggplot(DATA, aes(x=cut, fill = clarity))+
geom_bar(position = "stack")+
scale_fill_manual(values = c("red",
"pink",
"yellow",
"green",
"#33FFFF",
"darkblue",
"#9933FF",
"black"))+
theme(plot.title = element_text(hjust = 0.5))+
labs(x= "Cut", y = "Count", title = "Bar Plot of Cut by Clarity")
ggplot(DATA, aes(x = cut, y = price, fill = cut)) +
stat_summary(geom = "bar") +
theme(plot.title = element_text(hjust=.5))+
labs(title = "Average Price by Cut", x = "Cut", y = "Average Price")+
scale_y_continuous(breaks = breaks_extended(6),labels = label_dollar())
ggplot(DATA, aes(x = price)) +
geom_histogram() +
theme(plot.title = element_text(hjust=.5))+
labs(title = "Histogram of Diamond Prices", x = "Price", y = "Count")+
scale_x_continuous(breaks = breaks_extended(10),labels = label_dollar())
ggplot(DATA, aes(x = price)) +
geom_density() +
theme(plot.title = element_text(hjust=.5))+
labs(title = "Density Plot of Diamond Prices", x = "Price", y = "Density")+
scale_x_continuous(breaks = breaks_extended(8),labels = label_dollar())
ggplot(DATA, aes(x=carat, y=price))+
geom_smooth(method="lm", se=FALSE)+
geom_point()+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
ggplot(DATA, aes(x=carat, y=price))+
geom_smooth(method="lm", se=FALSE)+
geom_point()+
theme(plot.title = element_text(hjust=.5))+
labs(title = "Scatterplot of Price vs. Carat",
x = "Carat",
y = "Price")+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
ggplot(DATA, aes(x=carat, y=price))+
geom_smooth(method="lm", se=FALSE)+
geom_point()+
theme(plot.title = element_text(hjust=.5))+
labs(title = "Scatterplot of Diamond Price Against Carat",
x = "Carat",
y = "Price")+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
ggplot(diamonds, aes(x=carat, y=ystar))+
geom_point()+
theme(plot.title=element_text(hjust=.5))+
labs(x = "Carat", y = "Tranformed Price", title = "Transformed Price Against Carat" )+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
ystar <- (DATA$price)^.31
DATA <-data.frame(DATA,ystar)
regression2 <- lm(ystar~carat, data=DATA)
ggplot(diamonds, aes(x=carat, y=ystar))+
geom_point()+
theme(plot.title=element_text(hjust=.5))+
labs(x = "Carat", y = "Tranformed Price", title = "Transformed Price Against Carat" )+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
View(DATA)
View(DATA)
ggplot(DATA, aes(x=carat, y=ystar))+
geom_point()+
theme(plot.title=element_text(hjust=.5))+
labs(x = "Carat", y = "Tranformed Price", title = "Transformed Price Against Carat" )+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
ggplot(DATA, aes(x=carat, y=ystar))+
geom_point()+
theme(plot.title=element_text(hjust=.5))+
labs(x = "Carat", y = "log(Price)", title = "Transformed Price Against Carat" )+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
# Transforming variables (log transformation due to exponential price increase)
DATA$log_price <- log(DATA$price)
DATA$log_carat <- log(DATA$carat)
# Fit the simple linear regression model
regression3 <- lm(log_price ~ log_carat, data = diamonds)
# Transforming variables (log transformation due to exponential price increase)
DATA$log_price <- log(DATA$price)
DATA$log_carat <- log(DATA$carat)
# Fit the simple linear regression model
regression3 <- lm(log_price ~ log_carat, data = DATA)
ggplot(DATA, aes(x=carat, y=ystar))+
geom_point()+
theme(plot.title=element_text(hjust=.5))+
labs(x = "log(Carat)", y = "log(Price)", title = "Transformed Price Against Carat" )+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(scales)
DATA <- read.csv("diamonds.csv", header=TRUE)
head(DATA)
#factor cut so any visualization showing cut on the x-axis as them ordered from best to worst
DATA$cut <- factor(DATA$cut, c("Astor Ideal", "Ideal", "Very Good", "Good"))
ggplot(DATA, aes(x = carat, y = price)) +
geom_point() +
geom_smooth(method = "lm") +
theme(plot.title = element_text(hjust=.5))+
labs(title = "Scatterplot of Price vs. Carat",
x = "Carat",
y = "Price")+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
#Multivariate scatterplot
ggplot(DATA, aes(x=carat, y=price, color=clarity))+
geom_point()+
scale_size(range = c(0.1,12))+
theme(plot.title = element_text(hjust = 0.5))+
labs(x= "Carat", y= "Price", title= "Scatter Plot of Carat vs Price by Clarity")+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
NoFL <- DATA %>%
filter(clarity!='FL') %>%
ggplot(aes(x = clarity, y = price)) +
geom_boxplot(outlier.shape = NA, fill = "lightblue") +
theme(plot.title=element_text(hjust=.5))+
labs(title = "Price  by Clarity Without Flawless",
x = "Clarity",
y = "Price")+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())+
coord_cartesian(ylim = c(0,15000 ))
NoFL
ggplot(DATA, aes(x = clarity, y = price)) +
geom_boxplot(fill = "lightblue") +
theme(plot.title=element_text(hjust=.5))+
labs(title = "Price by Clarity Including Flawless",
x = "Clarity",
y = "Price")+
scale_y_continuous(breaks = breaks_extended(12), labels = label_dollar())+
coord_cartesian(ylim = c(0,250000 ))
ggplot(DATA, aes(x = color, y = price)) +
geom_boxplot(outlier.shape = NA, fill = "lightgreen") +
theme(plot.title=element_text(hjust=.5))+
labs(title = "Price by Color",
x = "Color",
y = "Price")+
scale_y_continuous(breaks = breaks_extended(12), labels = label_dollar())+
coord_cartesian(ylim = c(0,15000 ))
ggplot(DATA, aes(x = color, y = price)) +
geom_boxplot(fill = "lightgreen") +
theme(plot.title=element_text(hjust=.5))+
labs(title = "Price by Color",
x = "Color",
y = "Price")+
scale_y_continuous(breaks = breaks_extended(12),labels = label_dollar())
ggplot(DATA, aes(x = cut, y = price)) +
geom_boxplot(outlier.shape = NA, fill = "lightcoral") +
theme(plot.title=element_text(hjust=.5))+
labs(title = "Price by Cut",
x = "Cut",
y = "Price")+
scale_y_continuous(breaks = breaks_extended(8),labels = label_dollar())+
coord_cartesian(ylim = c(0,15000 ))
ggplot(DATA, aes(x = cut, y = price)) +
geom_boxplot(fill = "lightcoral") +
theme(plot.title=element_text(hjust=.5))+
labs(title = "Price by Cut",
x = "Cut",
y = "Price")+
scale_y_continuous(breaks = breaks_extended(8),labels = label_dollar())
# Boxplot of cut vs carat by clarity
ggplot(DATA, aes(x=cut, y=carat))+
geom_boxplot(fill="Blue")+
facet_wrap(~clarity)+
theme(plot.title = element_text(hjust = 0.5))+
labs(x= "Cut", y= "Carat", title= "Boxplot of Cut vs Carat by Clarity")
# Bivariate Bar Chart
ggplot(DATA, aes(x=cut, fill = clarity))+
geom_bar(position = "stack")+
scale_fill_manual(values = c("red",
"pink",
"yellow",
"green",
"#33FFFF",
"darkblue",
"#9933FF",
"black"))+
theme(plot.title = element_text(hjust = 0.5))+
labs(x= "Cut", y = "Count", title = "Bar Plot of Cut by Clarity")
ggplot(DATA, aes(x = cut, y = price, fill = cut)) +
stat_summary(geom = "bar") +
theme(plot.title = element_text(hjust=.5))+
labs(title = "Average Price by Cut", x = "Cut", y = "Average Price")+
scale_y_continuous(breaks = breaks_extended(6),labels = label_dollar())
ggplot(DATA, aes(x = price)) +
geom_histogram() +
theme(plot.title = element_text(hjust=.5))+
labs(title = "Histogram of Diamond Prices", x = "Price", y = "Count")+
scale_x_continuous(breaks = breaks_extended(10),labels = label_dollar())
ggplot(DATA, aes(x = price)) +
geom_density() +
theme(plot.title = element_text(hjust=.5))+
labs(title = "Density Plot of Diamond Prices", x = "Price", y = "Density")+
scale_x_continuous(breaks = breaks_extended(8),labels = label_dollar())
ggplot(DATA, aes(x=carat, y=price))+
geom_smooth(method="lm", se=FALSE)+
geom_point()+
theme(plot.title = element_text(hjust=.5))+
labs(title = "Scatterplot of Diamond Price Against Carat",
x = "Carat",
y = "Price")+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
ystar <- (DATA$price)^.31
DATA <-data.frame(DATA,ystar)
regression2 <- lm(ystar~carat, data=DATA)
ggplot(DATA, aes(x=carat, y=ystar))+
geom_point()+
theme(plot.title=element_text(hjust=.5))+
labs(x = "Carat", y = "log(Price)", title = "Transformed Price Against Carat" )+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
# Transforming variables (log transformation due to exponential price increase)
DATA$log_price <- log(DATA$price)
ggplot(DATA, aes(x=carat, y=ystar))+
geom_point()+
theme(plot.title=element_text(hjust=.5))+
labs(x = "Carat", y = " Transformed Price", title = "Transformed Price Against Carat" )+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
ggplot(DATA, aes(x=carat, y=log_price))+
geom_point()+
theme(plot.title=element_text(hjust=.5))+
labs(x = "Carat", y = "log(Price)", title = "Transformed Price Against Carat" )+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
DATA$log_carat <- log(DATA$carat)
ggplot(DATA, aes(x=log_carat, y=log_price))+
geom_point()+
theme(plot.title=element_text(hjust=.5))+
labs(x = "log(Carat)", y = "log(Price)", title = "Log Transformed Price Against Log Tranformed Carat" )+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
ggplot(DATA, aes(x=log_carat, y=log_price))+
geom_point(method="lm", se=FALSE)+
theme(plot.title=element_text(hjust=.5))+
labs(x = "log(Carat)", y = "log(Price)", title = "Log Transformed Price Against Log Tranformed Carat" )+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
ggplot(DATA, aes(x=log_carat, y=log_price))+
geom_point()+
geom_smooth(method="lm", se=FALSE)+
theme(plot.title=element_text(hjust=.5))+
labs(x = "log(Carat)", y = "log(Price)", title = "Log Transformed Price Against Log Tranformed Carat" )+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
# Fit the simple linear regression model
regression3 <- lm(log_price ~ log_carat, data = DATA)
#Multivariate scatterplot
ggplot(DATA, aes(x=carat, y=price, color=clarity))+
geom_point()+
scale_color_manual(values = c("red",
"pink",
"yellow",
"green",
"#33FFFF",
"darkblue",
"#9933FF",
"black"))
scale_size(range = c(0.1,12))+
theme(plot.title = element_text(hjust = 0.5))+
labs(x= "Carat", y= "Price", title= "Scatter Plot of Carat vs Price by Clarity")+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
#Multivariate scatterplot
ggplot(DATA, aes(x=carat, y=price, color=clarity))+
geom_point()+
scale_color_manual(values = c("red",
"gray",
"yellow",
"green",
"#33FFFF",
"darkblue",
"#9933FF"))
#Multivariate scatterplot
ggplot(DATA, aes(x=carat, y=price, color=clarity))+
geom_point()+
scale_color_manual(values = c("red",
"gray",
"yellow",
"green",
"#33FFFF",
"darkblue",
"#9933FF",
"black"))
scale_size(range = c(0.1,12))+
theme(plot.title = element_text(hjust = 0.5))+
labs(x= "Carat", y= "Price", title= "Scatter Plot of Carat vs Price by Clarity")+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
#Multivariate scatterplot
ggplot(DATA, aes(x=carat, y=price, color=color))+
geom_point()+
scale_color_manual(values = c("red",
"gray",
"yellow",
"green",
"#33FFFF",
"darkblue",
"#9933FF",))
#Multivariate scatterplot
ggplot(DATA, aes(x=carat, y=price, color=color))+
geom_point()+
scale_color_manual(values = c("red",
"gray",
"yellow",
"green",
"#33FFFF",
"darkblue",
"#9933FF"))
scale_size(range = c(0.1,12))+
theme(plot.title = element_text(hjust = 0.5))+
labs(x= "Carat", y= "Price", title= "Scatter Plot of Carat vs Price by Color")+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
#Multivariate scatterplot
ggplot(DATA, aes(x=carat, y=price, color=color))+
geom_point()+
scale_color_manual(values = c("red",
"gray",
"yellow",
"green",
"#33FFFF",
"darkblue",
"#9933FF"))+
scale_size(range = c(0.1,12))+
theme(plot.title = element_text(hjust = 0.5))+
labs(x= "Carat", y= "Price", title= "Scatter Plot of Carat vs Price by Color")+
scale_y_continuous(breaks = breaks_extended(8), labels = label_dollar())
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
2*
(1-pnorm(abs(1.022167)))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
install.packages("plotly")
library(plotly)
fig2 <- iris %>%
plot_ly(
x         = ~Petal.Length,
y         = ~Petal.Width,
size      = ~Sepal.Length,
color     = ~Sepal.Width,
symbol    = ~Species,
type      = "scatter",
mode      = "markers",
height    = 500, width = 750)
fig2
fig2 <- iris %>%
plot_ly(
x         = ~Petal.Length,
y         = ~Petal.Width,
size      = ~Sepal.Length,
color     = ~Sepal.Width,
symbol    = ~Species,
type      = "scatter",
mode      = "markers",
height    = 500,
width = 750)
fig2
fig1 <- mpg %>%
plot_ly(
x         = ~hwy,
y         = ~cty,
type      = 'scatter',
size      = ~displ,
color     = ~class,
hovertext = ~manufacturer,
mode      = "markers",
height    = 500, width = 750)
fig1
setwd("~/Grad/STAT 6021/Project 2")
